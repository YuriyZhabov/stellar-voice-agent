#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤—Ö–æ–¥—è—â–∏—Ö –∑–≤–æ–Ω–∫–æ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏.
"""

import subprocess
import sys
import time

def monitor_calls():
    """–ú–æ–Ω–∏—Ç–æ—Ä–∏—Ç –≤—Ö–æ–¥—è—â–∏–µ –∑–≤–æ–Ω–∫–∏."""
    print("üìû –ú–û–ù–ò–¢–û–†–ò–ù–ì –í–•–û–î–Ø–©–ò–• –ó–í–û–ù–ö–û–í")
    print("=" * 50)
    print("üì± –ü–æ–∑–≤–æ–Ω–∏—Ç–µ –Ω–∞ –Ω–æ–º–µ—Ä: +79952227978")
    print("üõë –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
    print("=" * 50)
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ª–æ–≥–æ–≤
        process = subprocess.Popen(
            ["docker", "logs", "-f", "voice-ai-livekit-sip-correct"],
            stdout=subprocess.PIPE,
            stderr=subprocess.STDOUT,
            text=True,
            bufsize=1
        )
        
        for line in process.stdout:
            line = line.strip()
            if not line:
                continue
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–∞–∂–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è
            if any(keyword in line.lower() for keyword in [
                "processing invite", "rejecting inbound", "auth check", 
                "room created", "participant joined", "error", "warn"
            ]):
                timestamp = time.strftime("%H:%M:%S")
                
                if "processing invite" in line.lower():
                    print(f"[{timestamp}] üìû –í–•–û–î–Ø–©–ò–ô –ó–í–û–ù–û–ö: {line}")
                elif "rejecting inbound" in line.lower():
                    print(f"[{timestamp}] ‚ùå –ó–í–û–ù–û–ö –û–¢–ö–õ–û–ù–ï–ù: {line}")
                elif "auth check failed" in line.lower():
                    print(f"[{timestamp}] üîê –û–®–ò–ë–ö–ê –ê–£–¢–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–ò: {line}")
                elif "room created" in line.lower():
                    print(f"[{timestamp}] üè† –ö–û–ú–ù–ê–¢–ê –°–û–ó–î–ê–ù–ê: {line}")
                elif "participant joined" in line.lower():
                    print(f"[{timestamp}] üë§ –£–ß–ê–°–¢–ù–ò–ö –ü–†–ò–°–û–ï–î–ò–ù–ò–õ–°–Ø: {line}")
                elif "error" in line.lower():
                    print(f"[{timestamp}] üö® –û–®–ò–ë–ö–ê: {line}")
                elif "warn" in line.lower():
                    print(f"[{timestamp}] ‚ö†Ô∏è –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: {line}")
                else:
                    print(f"[{timestamp}] ‚ÑπÔ∏è –°–û–ë–´–¢–ò–ï: {line}")
                    
    except KeyboardInterrupt:
        print("\nüõë –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        process.terminate()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: {e}")

if __name__ == "__main__":
    monitor_calls()